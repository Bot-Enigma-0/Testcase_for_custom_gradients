% ------------- DIRECT, ADJOINT, AND LINEARIZED PROBLEM DEFINITION ------------%
%
% Physical governing equations (EULER, NAVIER_STOKES,
%                               WAVE_EQUATION, HEAT_EQUATION, FEM_ELASTICITY,
%                               POISSON_EQUATION)
SOLVER= EULER
MATH_PROBLEM= DISCRETE_ADJOINT
RESTART_SOL= NO
MULTIZONE= YES
OUTER_ITER = 10000
TIME_DOMAIN = NO
INNER_ITER = 1
OBJECTIVE_FUNCTION = DRAG
%
% ----------- COMPRESSIBLE AND INCOMPRESSIBLE FREE-STREAM DEFINITION ----------%
%
% Mach number (non-dimensional, based on the free-stream values)
MACH_NUMBER= 2.0
AOA= 0.0
SIDESLIP_ANGLE= 0.0
FREESTREAM_PRESSURE= 100000.0
FREESTREAM_TEMPERATURE= 300.0
REF_DIMENSIONALIZATION= DIMENSIONAL
%
% ---------------------- REFERENCE VALUE DEFINITION ---------------------------%
%
% Reference origin for moment computation
REF_ORIGIN_MOMENT_X = 0.25
REF_ORIGIN_MOMENT_Y = 0.00
REF_ORIGIN_MOMENT_Z = 0.00
REF_LENGTH= 1.0
REF_AREA= 1.0
%
% -------------------- BOUNDARY CONDITION DEFINITION --------------------------%
%
% Euler wall boundary marker(s) (NONE = no marker)
MARKER_EULER= ( Wall )
MARKER_SUPERSONIC_INLET= ( Inlet, 300.0, 100000.0, 695.4290761825, 0.0, 0.0 )
MARKER_SUPERSONIC_OUTLET= ( Outlet )
MARKER_FAR = (Far)
%
% ------------------------ SURFACES IDENTIFICATION ----------------------------%
%
MARKER_PLOTTING= ( Wall )
MARKER_MONITORING= ( Wall )
MARKER_DESIGNING = ( Wall )
MARKER_ANALYZE = (Wall)
MARKER_ANALYZE_AVERAGE = MASSFLUX
%
% ------------- COMMON PARAMETERS DEFINING THE NUMERICAL METHOD ---------------%
%
% Numerical method for spatial gradients (GREEN_GAUSS, LEAST_SQUARES, 
%                                         WEIGHTED_LEAST_SQUARES)
NUM_METHOD_GRAD= WEIGHTED_LEAST_SQUARES
CFL_NUMBER= 5.0
CFL_ADAPT= YES
CFL_ADAPT_PARAM= ( 0.9, 1.1, 0.1, 1e10 )
RK_ALPHA_COEFF= ( 0.66667, 0.66667, 1.000000 )
LINEAR_SOLVER= BCGSTAB
LINEAR_SOLVER_PREC= ILU
LINEAR_SOLVER_ERROR= 1E-5
LINEAR_SOLVER_ITER= 50
NEWTON_KRYLOV= YES
NEWTON_KRYLOV_IPARAM= (0, 5, 1) % n0, np, ft
NEWTON_KRYLOV_DPARAM= (0.0, 1e-5, -1.0, 1e-3) % r0, tp, rf, e
%
% -------------------------- MULTIGRID PARAMETERS -----------------------------%
%
% Multi-Grid Levels (0 = no multi-grid)
MGLEVEL= 3
MGCYCLE= W_CYCLE
MG_PRE_SMOOTH= ( 1, 2, 3, 3 )
MG_POST_SMOOTH= ( 0, 0, 0, 0 )
MG_CORRECTION_SMOOTH= ( 0, 0, 0, 0 )
MG_DAMP_RESTRICTION= 1.0
MG_DAMP_PROLONGATION= 1.0
%
% -------------------- FLOW NUMERICAL METHOD DEFINITION -----------------------%
%
% Convective numerical method (JST, LAX-FRIEDRICH, CUSP, ROE, AUSM, HLLC,
%                              TURKEL_PREC, MSW)
CONV_NUM_METHOD_FLOW= JST
JST_SENSOR_COEFF= ( 0.5, 0.02 )
TIME_DISCRE_FLOW= EULER_IMPLICIT
%
% --------------------------- CONVERGENCE PARAMETERS --------------------------%
%
CONV_FIELD= RMS_ADJ_DENSITY[0]
CONV_RESIDUAL_MINVAL= -14
CONV_STARTITER= 10
CONV_CAUCHY_ELEMS= 100
CONV_CAUCHY_EPS= 1E-10
%
% ------------------------- INPUT/OUTPUT INFORMATION --------------------------%
%
OUTPUT_PRECISION = 15
MESH_FILENAME= ../wedge_with_ffd.su2
MESH_FORMAT= SU2
MESH_OUT_FILENAME= def_out_1.su2
SOLUTION_FILENAME= restart_flow.dat
SOLUTION_ADJ_FILENAME= restart_adj.dat
TABULAR_FORMAT= CSV
CONV_FILENAME= history
RESTART_FILENAME= restart_flow.dat
RESTART_ADJ_FILENAME= restart_adj.dat
VOLUME_FILENAME= flow
VOLUME_ADJ_FILENAME= adjoint
GRAD_OBJFUNC_FILENAME= of_grad.dat
SURFACE_FILENAME= surface_flow
SURFACE_ADJ_FILENAME= surface_adjoint
SCREEN_OUTPUT = (OUTER_ITER, RMS_RES[0], RMS_RES[1], RMS_RES[2], RMS_RES[3], RMS_RES[4], AVG_CFL[0], DRAG[0], LIFT[0])
HISTORY_OUTPUT =(OUTER_ITER, RMS_RES[0], RMS_RES[1], RMS_RES[2], RMS_RES[3], RMS_RES[4], AVG_CFL[0], DRAG[0], LIFT[0])
WRT_PERFORMANCE= YES
WRT_AD_STATISTICS= YES
WRT_RESTART_OVERWRITE= YES
WRT_SURFACE_OVERWRITE= YES
WRT_VOLUME_OVERWRITE= YES
WRT_FORCES_BREAKDOWN= YES
BREAKDOWN_FILENAME= forces_breakdown.dat
%
% -------------------- ADJOINT-SOLVER-NUMEROCAL-METHOD -----------------------%
MUSCL_ADJFLOW = NO
SLOPE_LIMITER_ADJFLOW = NONE
MUSCL_ADJTURB = NO
SLOPE_LIMITER_ADJTURB = NONE
DISCADJ_LIN_SOLVER = BCGSTAB
DISCADJ_LIN_PREC = ILU
FROZEN_LIMITER_DISC= NO
FROZEN_VISC_DISC= NO
INCONSISTENT_DISC= YES
CONV_NUM_METHOD_ADJFLOW= JST
TIME_DISCRE_ADJFLOW= EULER_IMPLICIT
RELAXATION_FACTOR_ADJOINT= 1.0
QUASI_NEWTON_NUM_SAMPLES= 20
CFL_REDUCTION_ADJFLOW= 0.8
% Limit value for the adjoint variable
LIMIT_ADJFLOW= 1E6
MG_ADJFLOW= YES
ADJ_JST_SENSOR_COEFF= ( 0.5, 0.02 )
%
% -------------------- FREE-FORM DEFORMATION PARAMETERS -----------------------%
%
DV_MARKER = ( Wall )
FFD_TOLERANCE = 1E-10
FFD_ITERATIONS = 1000
FFD_CONTINUITY = 2ND_DERIVATIVE
DV_FILENAME = mesh_motion.data
FFD_FIX_I = (0, 150)
FFD_FIX_J = (150)
FFD_FIX_K = (150)
FFD_DEFINITION = (Wall, (2, -0.1, 0, 6, 0.9, 0, 6, 1.1, 0, 2, 0.1, 0), (0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))
FFD_DEGREE = (20, 10, 0)
DEFINITION_DV = ( 19, 1.0 | Wall | BOX1, 0, 0, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 1, 0, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 2, 0, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 3, 0, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 4, 0, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 5, 0, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 6, 0, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 7, 0, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 8, 0, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 9, 0, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 10, 0, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 11, 0, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 12, 0, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 13, 0, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 14, 0, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 15, 0, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 16, 0, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 17, 0, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 18, 0, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 19, 0, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 20, 0, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 0, 1, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 1, 1, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 2, 1, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 3, 1, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 4, 1, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 5, 1, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 6, 1, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 7, 1, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 8, 1, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 9, 1, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 10, 1, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 11, 1, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 12, 1, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 13, 1, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 14, 1, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 15, 1, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 16, 1, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 17, 1, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 18, 1, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 19, 1, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 20, 1, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 0, 2, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 1, 2, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 2, 2, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 3, 2, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 4, 2, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 5, 2, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 6, 2, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 7, 2, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 8, 2, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 9, 2, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 10, 2, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 11, 2, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 12, 2, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 13, 2, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 14, 2, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 15, 2, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 16, 2, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 17, 2, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 18, 2, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 19, 2, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 20, 2, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 0, 3, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 1, 3, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 2, 3, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 3, 3, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 4, 3, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 5, 3, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 6, 3, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 7, 3, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 8, 3, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 9, 3, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 10, 3, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 11, 3, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 12, 3, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 13, 3, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 14, 3, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 15, 3, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 16, 3, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 17, 3, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 18, 3, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 19, 3, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 20, 3, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 0, 4, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 1, 4, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 2, 4, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 3, 4, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 4, 4, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 5, 4, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 6, 4, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 7, 4, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 8, 4, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 9, 4, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 10, 4, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 11, 4, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 12, 4, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 13, 4, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 14, 4, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 15, 4, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 16, 4, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 17, 4, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 18, 4, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 19, 4, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 20, 4, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 0, 5, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 1, 5, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 2, 5, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 3, 5, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 4, 5, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 5, 5, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 6, 5, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 7, 5, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 8, 5, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 9, 5, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 10, 5, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 11, 5, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 12, 5, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 13, 5, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 14, 5, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 15, 5, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 16, 5, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 17, 5, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 18, 5, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 19, 5, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 20, 5, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 0, 6, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 1, 6, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 2, 6, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 3, 6, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 4, 6, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 5, 6, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 6, 6, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 7, 6, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 8, 6, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 9, 6, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 10, 6, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 11, 6, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 12, 6, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 13, 6, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 14, 6, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 15, 6, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 16, 6, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 17, 6, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 18, 6, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 19, 6, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 20, 6, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 0, 7, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 1, 7, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 2, 7, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 3, 7, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 4, 7, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 5, 7, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 6, 7, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 7, 7, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 8, 7, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 9, 7, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 10, 7, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 11, 7, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 12, 7, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 13, 7, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 14, 7, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 15, 7, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 16, 7, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 17, 7, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 18, 7, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 19, 7, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 20, 7, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 0, 8, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 1, 8, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 2, 8, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 3, 8, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 4, 8, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 5, 8, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 6, 8, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 7, 8, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 8, 8, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 9, 8, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 10, 8, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 11, 8, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 12, 8, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 13, 8, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 14, 8, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 15, 8, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 16, 8, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 17, 8, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 18, 8, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 19, 8, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 20, 8, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 0, 9, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 1, 9, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 2, 9, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 3, 9, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 4, 9, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 5, 9, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 6, 9, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 7, 9, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 8, 9, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 9, 9, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 10, 9, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 11, 9, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 12, 9, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 13, 9, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 14, 9, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 15, 9, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 16, 9, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 17, 9, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 18, 9, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 19, 9, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 20, 9, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 0, 10, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 1, 10, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 2, 10, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 3, 10, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 4, 10, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 5, 10, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 6, 10, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 7, 10, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 8, 10, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 9, 10, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 10, 10, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 11, 10, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 12, 10, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 13, 10, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 14, 10, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 15, 10, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 16, 10, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 17, 10, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 18, 10, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 19, 10, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 20, 10, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 0, 0, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 1, 0, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 2, 0, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 3, 0, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 4, 0, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 5, 0, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 6, 0, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 7, 0, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 8, 0, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 9, 0, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 10, 0, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 11, 0, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 12, 0, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 13, 0, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 14, 0, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 15, 0, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 16, 0, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 17, 0, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 18, 0, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 19, 0, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 20, 0, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 0, 1, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 1, 1, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 2, 1, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 3, 1, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 4, 1, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 5, 1, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 6, 1, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 7, 1, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 8, 1, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 9, 1, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 10, 1, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 11, 1, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 12, 1, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 13, 1, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 14, 1, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 15, 1, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 16, 1, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 17, 1, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 18, 1, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 19, 1, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 20, 1, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 0, 2, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 1, 2, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 2, 2, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 3, 2, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 4, 2, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 5, 2, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 6, 2, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 7, 2, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 8, 2, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 9, 2, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 10, 2, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 11, 2, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 12, 2, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 13, 2, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 14, 2, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 15, 2, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 16, 2, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 17, 2, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 18, 2, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 19, 2, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 20, 2, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 0, 3, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 1, 3, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 2, 3, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 3, 3, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 4, 3, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 5, 3, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 6, 3, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 7, 3, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 8, 3, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 9, 3, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 10, 3, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 11, 3, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 12, 3, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 13, 3, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 14, 3, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 15, 3, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 16, 3, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 17, 3, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 18, 3, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 19, 3, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 20, 3, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 0, 4, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 1, 4, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 2, 4, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 3, 4, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 4, 4, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 5, 4, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 6, 4, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 7, 4, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 8, 4, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 9, 4, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 10, 4, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 11, 4, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 12, 4, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 13, 4, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 14, 4, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 15, 4, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 16, 4, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 17, 4, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 18, 4, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 19, 4, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 20, 4, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 0, 5, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 1, 5, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 2, 5, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 3, 5, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 4, 5, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 5, 5, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 6, 5, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 7, 5, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 8, 5, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 9, 5, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 10, 5, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 11, 5, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 12, 5, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 13, 5, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 14, 5, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 15, 5, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 16, 5, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 17, 5, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 18, 5, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 19, 5, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 20, 5, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 0, 6, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 1, 6, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 2, 6, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 3, 6, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 4, 6, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 5, 6, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 6, 6, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 7, 6, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 8, 6, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 9, 6, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 10, 6, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 11, 6, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 12, 6, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 13, 6, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 14, 6, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 15, 6, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 16, 6, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 17, 6, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 18, 6, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 19, 6, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 20, 6, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 0, 7, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 1, 7, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 2, 7, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 3, 7, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 4, 7, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 5, 7, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 6, 7, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 7, 7, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 8, 7, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 9, 7, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 10, 7, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 11, 7, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 12, 7, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 13, 7, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 14, 7, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 15, 7, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 16, 7, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 17, 7, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 18, 7, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 19, 7, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 20, 7, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 0, 8, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 1, 8, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 2, 8, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 3, 8, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 4, 8, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 5, 8, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 6, 8, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 7, 8, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 8, 8, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 9, 8, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 10, 8, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 11, 8, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 12, 8, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 13, 8, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 14, 8, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 15, 8, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 16, 8, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 17, 8, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 18, 8, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 19, 8, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 20, 8, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 0, 9, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 1, 9, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 2, 9, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 3, 9, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 4, 9, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 5, 9, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 6, 9, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 7, 9, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 8, 9, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 9, 9, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 10, 9, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 11, 9, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 12, 9, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 13, 9, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 14, 9, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 15, 9, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 16, 9, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 17, 9, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 18, 9, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 19, 9, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 20, 9, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 0, 10, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 1, 10, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 2, 10, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 3, 10, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 4, 10, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 5, 10, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 6, 10, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 7, 10, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 8, 10, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 9, 10, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 10, 10, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 11, 10, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 12, 10, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 13, 10, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 14, 10, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 15, 10, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 16, 10, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 17, 10, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 18, 10, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 19, 10, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 20, 10, 0.0, 1.0 )

% FOR DOT:
DV_KIND= FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D
DV_PARAM= ( Wall, 0, 0, 1.0, 0.0 ); ( Wall, 1, 0, 1.0, 0.0 ); ( Wall, 2, 0, 1.0, 0.0 ); ( Wall, 3, 0, 1.0, 0.0 ); ( Wall, 4, 0, 1.0, 0.0 ); ( Wall, 5, 0, 1.0, 0.0 ); ( Wall, 6, 0, 1.0, 0.0 ); ( Wall, 7, 0, 1.0, 0.0 ); ( Wall, 8, 0, 1.0, 0.0 ); ( Wall, 9, 0, 1.0, 0.0 ); ( Wall, 10, 0, 1.0, 0.0 ); ( Wall, 11, 0, 1.0, 0.0 ); ( Wall, 12, 0, 1.0, 0.0 ); ( Wall, 13, 0, 1.0, 0.0 ); ( Wall, 14, 0, 1.0, 0.0 ); ( Wall, 15, 0, 1.0, 0.0 ); ( Wall, 16, 0, 1.0, 0.0 ); ( Wall, 17, 0, 1.0, 0.0 ); ( Wall, 18, 0, 1.0, 0.0 ); ( Wall, 19, 0, 1.0, 0.0 ); ( Wall, 20, 0, 1.0, 0.0 ); ( Wall, 0, 1, 1.0, 0.0 ); ( Wall, 1, 1, 1.0, 0.0 ); ( Wall, 2, 1, 1.0, 0.0 ); ( Wall, 3, 1, 1.0, 0.0 ); ( Wall, 4, 1, 1.0, 0.0 ); ( Wall, 5, 1, 1.0, 0.0 ); ( Wall, 6, 1, 1.0, 0.0 ); ( Wall, 7, 1, 1.0, 0.0 ); ( Wall, 8, 1, 1.0, 0.0 ); ( Wall, 9, 1, 1.0, 0.0 ); ( Wall, 10, 1, 1.0, 0.0 ); ( Wall, 11, 1, 1.0, 0.0 ); ( Wall, 12, 1, 1.0, 0.0 ); ( Wall, 13, 1, 1.0, 0.0 ); ( Wall, 14, 1, 1.0, 0.0 ); ( Wall, 15, 1, 1.0, 0.0 ); ( Wall, 16, 1, 1.0, 0.0 ); ( Wall, 17, 1, 1.0, 0.0 ); ( Wall, 18, 1, 1.0, 0.0 ); ( Wall, 19, 1, 1.0, 0.0 ); ( Wall, 20, 1, 1.0, 0.0 ); ( Wall, 0, 2, 1.0, 0.0 ); ( Wall, 1, 2, 1.0, 0.0 ); ( Wall, 2, 2, 1.0, 0.0 ); ( Wall, 3, 2, 1.0, 0.0 ); ( Wall, 4, 2, 1.0, 0.0 ); ( Wall, 5, 2, 1.0, 0.0 ); ( Wall, 6, 2, 1.0, 0.0 ); ( Wall, 7, 2, 1.0, 0.0 ); ( Wall, 8, 2, 1.0, 0.0 ); ( Wall, 9, 2, 1.0, 0.0 ); ( Wall, 10, 2, 1.0, 0.0 ); ( Wall, 11, 2, 1.0, 0.0 ); ( Wall, 12, 2, 1.0, 0.0 ); ( Wall, 13, 2, 1.0, 0.0 ); ( Wall, 14, 2, 1.0, 0.0 ); ( Wall, 15, 2, 1.0, 0.0 ); ( Wall, 16, 2, 1.0, 0.0 ); ( Wall, 17, 2, 1.0, 0.0 ); ( Wall, 18, 2, 1.0, 0.0 ); ( Wall, 19, 2, 1.0, 0.0 ); ( Wall, 20, 2, 1.0, 0.0 ); ( Wall, 0, 3, 1.0, 0.0 ); ( Wall, 1, 3, 1.0, 0.0 ); ( Wall, 2, 3, 1.0, 0.0 ); ( Wall, 3, 3, 1.0, 0.0 ); ( Wall, 4, 3, 1.0, 0.0 ); ( Wall, 5, 3, 1.0, 0.0 ); ( Wall, 6, 3, 1.0, 0.0 ); ( Wall, 7, 3, 1.0, 0.0 ); ( Wall, 8, 3, 1.0, 0.0 ); ( Wall, 9, 3, 1.0, 0.0 ); ( Wall, 10, 3, 1.0, 0.0 ); ( Wall, 11, 3, 1.0, 0.0 ); ( Wall, 12, 3, 1.0, 0.0 ); ( Wall, 13, 3, 1.0, 0.0 ); ( Wall, 14, 3, 1.0, 0.0 ); ( Wall, 15, 3, 1.0, 0.0 ); ( Wall, 16, 3, 1.0, 0.0 ); ( Wall, 17, 3, 1.0, 0.0 ); ( Wall, 18, 3, 1.0, 0.0 ); ( Wall, 19, 3, 1.0, 0.0 ); ( Wall, 20, 3, 1.0, 0.0 ); ( Wall, 0, 4, 1.0, 0.0 ); ( Wall, 1, 4, 1.0, 0.0 ); ( Wall, 2, 4, 1.0, 0.0 ); ( Wall, 3, 4, 1.0, 0.0 ); ( Wall, 4, 4, 1.0, 0.0 ); ( Wall, 5, 4, 1.0, 0.0 ); ( Wall, 6, 4, 1.0, 0.0 ); ( Wall, 7, 4, 1.0, 0.0 ); ( Wall, 8, 4, 1.0, 0.0 ); ( Wall, 9, 4, 1.0, 0.0 ); ( Wall, 10, 4, 1.0, 0.0 ); ( Wall, 11, 4, 1.0, 0.0 ); ( Wall, 12, 4, 1.0, 0.0 ); ( Wall, 13, 4, 1.0, 0.0 ); ( Wall, 14, 4, 1.0, 0.0 ); ( Wall, 15, 4, 1.0, 0.0 ); ( Wall, 16, 4, 1.0, 0.0 ); ( Wall, 17, 4, 1.0, 0.0 ); ( Wall, 18, 4, 1.0, 0.0 ); ( Wall, 19, 4, 1.0, 0.0 ); ( Wall, 20, 4, 1.0, 0.0 ); ( Wall, 0, 5, 1.0, 0.0 ); ( Wall, 1, 5, 1.0, 0.0 ); ( Wall, 2, 5, 1.0, 0.0 ); ( Wall, 3, 5, 1.0, 0.0 ); ( Wall, 4, 5, 1.0, 0.0 ); ( Wall, 5, 5, 1.0, 0.0 ); ( Wall, 6, 5, 1.0, 0.0 ); ( Wall, 7, 5, 1.0, 0.0 ); ( Wall, 8, 5, 1.0, 0.0 ); ( Wall, 9, 5, 1.0, 0.0 ); ( Wall, 10, 5, 1.0, 0.0 ); ( Wall, 11, 5, 1.0, 0.0 ); ( Wall, 12, 5, 1.0, 0.0 ); ( Wall, 13, 5, 1.0, 0.0 ); ( Wall, 14, 5, 1.0, 0.0 ); ( Wall, 15, 5, 1.0, 0.0 ); ( Wall, 16, 5, 1.0, 0.0 ); ( Wall, 17, 5, 1.0, 0.0 ); ( Wall, 18, 5, 1.0, 0.0 ); ( Wall, 19, 5, 1.0, 0.0 ); ( Wall, 20, 5, 1.0, 0.0 ); ( Wall, 0, 6, 1.0, 0.0 ); ( Wall, 1, 6, 1.0, 0.0 ); ( Wall, 2, 6, 1.0, 0.0 ); ( Wall, 3, 6, 1.0, 0.0 ); ( Wall, 4, 6, 1.0, 0.0 ); ( Wall, 5, 6, 1.0, 0.0 ); ( Wall, 6, 6, 1.0, 0.0 ); ( Wall, 7, 6, 1.0, 0.0 ); ( Wall, 8, 6, 1.0, 0.0 ); ( Wall, 9, 6, 1.0, 0.0 ); ( Wall, 10, 6, 1.0, 0.0 ); ( Wall, 11, 6, 1.0, 0.0 ); ( Wall, 12, 6, 1.0, 0.0 ); ( Wall, 13, 6, 1.0, 0.0 ); ( Wall, 14, 6, 1.0, 0.0 ); ( Wall, 15, 6, 1.0, 0.0 ); ( Wall, 16, 6, 1.0, 0.0 ); ( Wall, 17, 6, 1.0, 0.0 ); ( Wall, 18, 6, 1.0, 0.0 ); ( Wall, 19, 6, 1.0, 0.0 ); ( Wall, 20, 6, 1.0, 0.0 ); ( Wall, 0, 7, 1.0, 0.0 ); ( Wall, 1, 7, 1.0, 0.0 ); ( Wall, 2, 7, 1.0, 0.0 ); ( Wall, 3, 7, 1.0, 0.0 ); ( Wall, 4, 7, 1.0, 0.0 ); ( Wall, 5, 7, 1.0, 0.0 ); ( Wall, 6, 7, 1.0, 0.0 ); ( Wall, 7, 7, 1.0, 0.0 ); ( Wall, 8, 7, 1.0, 0.0 ); ( Wall, 9, 7, 1.0, 0.0 ); ( Wall, 10, 7, 1.0, 0.0 ); ( Wall, 11, 7, 1.0, 0.0 ); ( Wall, 12, 7, 1.0, 0.0 ); ( Wall, 13, 7, 1.0, 0.0 ); ( Wall, 14, 7, 1.0, 0.0 ); ( Wall, 15, 7, 1.0, 0.0 ); ( Wall, 16, 7, 1.0, 0.0 ); ( Wall, 17, 7, 1.0, 0.0 ); ( Wall, 18, 7, 1.0, 0.0 ); ( Wall, 19, 7, 1.0, 0.0 ); ( Wall, 20, 7, 1.0, 0.0 ); ( Wall, 0, 8, 1.0, 0.0 ); ( Wall, 1, 8, 1.0, 0.0 ); ( Wall, 2, 8, 1.0, 0.0 ); ( Wall, 3, 8, 1.0, 0.0 ); ( Wall, 4, 8, 1.0, 0.0 ); ( Wall, 5, 8, 1.0, 0.0 ); ( Wall, 6, 8, 1.0, 0.0 ); ( Wall, 7, 8, 1.0, 0.0 ); ( Wall, 8, 8, 1.0, 0.0 ); ( Wall, 9, 8, 1.0, 0.0 ); ( Wall, 10, 8, 1.0, 0.0 ); ( Wall, 11, 8, 1.0, 0.0 ); ( Wall, 12, 8, 1.0, 0.0 ); ( Wall, 13, 8, 1.0, 0.0 ); ( Wall, 14, 8, 1.0, 0.0 ); ( Wall, 15, 8, 1.0, 0.0 ); ( Wall, 16, 8, 1.0, 0.0 ); ( Wall, 17, 8, 1.0, 0.0 ); ( Wall, 18, 8, 1.0, 0.0 ); ( Wall, 19, 8, 1.0, 0.0 ); ( Wall, 20, 8, 1.0, 0.0 ); ( Wall, 0, 9, 1.0, 0.0 ); ( Wall, 1, 9, 1.0, 0.0 ); ( Wall, 2, 9, 1.0, 0.0 ); ( Wall, 3, 9, 1.0, 0.0 ); ( Wall, 4, 9, 1.0, 0.0 ); ( Wall, 5, 9, 1.0, 0.0 ); ( Wall, 6, 9, 1.0, 0.0 ); ( Wall, 7, 9, 1.0, 0.0 ); ( Wall, 8, 9, 1.0, 0.0 ); ( Wall, 9, 9, 1.0, 0.0 ); ( Wall, 10, 9, 1.0, 0.0 ); ( Wall, 11, 9, 1.0, 0.0 ); ( Wall, 12, 9, 1.0, 0.0 ); ( Wall, 13, 9, 1.0, 0.0 ); ( Wall, 14, 9, 1.0, 0.0 ); ( Wall, 15, 9, 1.0, 0.0 ); ( Wall, 16, 9, 1.0, 0.0 ); ( Wall, 17, 9, 1.0, 0.0 ); ( Wall, 18, 9, 1.0, 0.0 ); ( Wall, 19, 9, 1.0, 0.0 ); ( Wall, 20, 9, 1.0, 0.0 ); ( Wall, 0, 10, 1.0, 0.0 ); ( Wall, 1, 10, 1.0, 0.0 ); ( Wall, 2, 10, 1.0, 0.0 ); ( Wall, 3, 10, 1.0, 0.0 ); ( Wall, 4, 10, 1.0, 0.0 ); ( Wall, 5, 10, 1.0, 0.0 ); ( Wall, 6, 10, 1.0, 0.0 ); ( Wall, 7, 10, 1.0, 0.0 ); ( Wall, 8, 10, 1.0, 0.0 ); ( Wall, 9, 10, 1.0, 0.0 ); ( Wall, 10, 10, 1.0, 0.0 ); ( Wall, 11, 10, 1.0, 0.0 ); ( Wall, 12, 10, 1.0, 0.0 ); ( Wall, 13, 10, 1.0, 0.0 ); ( Wall, 14, 10, 1.0, 0.0 ); ( Wall, 15, 10, 1.0, 0.0 ); ( Wall, 16, 10, 1.0, 0.0 ); ( Wall, 17, 10, 1.0, 0.0 ); ( Wall, 18, 10, 1.0, 0.0 ); ( Wall, 19, 10, 1.0, 0.0 ); ( Wall, 20, 10, 1.0, 0.0 ); ( Wall, 0, 0, 0.0, 1.0 ); ( Wall, 1, 0, 0.0, 1.0 ); ( Wall, 2, 0, 0.0, 1.0 ); ( Wall, 3, 0, 0.0, 1.0 ); ( Wall, 4, 0, 0.0, 1.0 ); ( Wall, 5, 0, 0.0, 1.0 ); ( Wall, 6, 0, 0.0, 1.0 ); ( Wall, 7, 0, 0.0, 1.0 ); ( Wall, 8, 0, 0.0, 1.0 ); ( Wall, 9, 0, 0.0, 1.0 ); ( Wall, 10, 0, 0.0, 1.0 ); ( Wall, 11, 0, 0.0, 1.0 ); ( Wall, 12, 0, 0.0, 1.0 ); ( Wall, 13, 0, 0.0, 1.0 ); ( Wall, 14, 0, 0.0, 1.0 ); ( Wall, 15, 0, 0.0, 1.0 ); ( Wall, 16, 0, 0.0, 1.0 ); ( Wall, 17, 0, 0.0, 1.0 ); ( Wall, 18, 0, 0.0, 1.0 ); ( Wall, 19, 0, 0.0, 1.0 ); ( Wall, 20, 0, 0.0, 1.0 ); ( Wall, 0, 1, 0.0, 1.0 ); ( Wall, 1, 1, 0.0, 1.0 ); ( Wall, 2, 1, 0.0, 1.0 ); ( Wall, 3, 1, 0.0, 1.0 ); ( Wall, 4, 1, 0.0, 1.0 ); ( Wall, 5, 1, 0.0, 1.0 ); ( Wall, 6, 1, 0.0, 1.0 ); ( Wall, 7, 1, 0.0, 1.0 ); ( Wall, 8, 1, 0.0, 1.0 ); ( Wall, 9, 1, 0.0, 1.0 ); ( Wall, 10, 1, 0.0, 1.0 ); ( Wall, 11, 1, 0.0, 1.0 ); ( Wall, 12, 1, 0.0, 1.0 ); ( Wall, 13, 1, 0.0, 1.0 ); ( Wall, 14, 1, 0.0, 1.0 ); ( Wall, 15, 1, 0.0, 1.0 ); ( Wall, 16, 1, 0.0, 1.0 ); ( Wall, 17, 1, 0.0, 1.0 ); ( Wall, 18, 1, 0.0, 1.0 ); ( Wall, 19, 1, 0.0, 1.0 ); ( Wall, 20, 1, 0.0, 1.0 ); ( Wall, 0, 2, 0.0, 1.0 ); ( Wall, 1, 2, 0.0, 1.0 ); ( Wall, 2, 2, 0.0, 1.0 ); ( Wall, 3, 2, 0.0, 1.0 ); ( Wall, 4, 2, 0.0, 1.0 ); ( Wall, 5, 2, 0.0, 1.0 ); ( Wall, 6, 2, 0.0, 1.0 ); ( Wall, 7, 2, 0.0, 1.0 ); ( Wall, 8, 2, 0.0, 1.0 ); ( Wall, 9, 2, 0.0, 1.0 ); ( Wall, 10, 2, 0.0, 1.0 ); ( Wall, 11, 2, 0.0, 1.0 ); ( Wall, 12, 2, 0.0, 1.0 ); ( Wall, 13, 2, 0.0, 1.0 ); ( Wall, 14, 2, 0.0, 1.0 ); ( Wall, 15, 2, 0.0, 1.0 ); ( Wall, 16, 2, 0.0, 1.0 ); ( Wall, 17, 2, 0.0, 1.0 ); ( Wall, 18, 2, 0.0, 1.0 ); ( Wall, 19, 2, 0.0, 1.0 ); ( Wall, 20, 2, 0.0, 1.0 ); ( Wall, 0, 3, 0.0, 1.0 ); ( Wall, 1, 3, 0.0, 1.0 ); ( Wall, 2, 3, 0.0, 1.0 ); ( Wall, 3, 3, 0.0, 1.0 ); ( Wall, 4, 3, 0.0, 1.0 ); ( Wall, 5, 3, 0.0, 1.0 ); ( Wall, 6, 3, 0.0, 1.0 ); ( Wall, 7, 3, 0.0, 1.0 ); ( Wall, 8, 3, 0.0, 1.0 ); ( Wall, 9, 3, 0.0, 1.0 ); ( Wall, 10, 3, 0.0, 1.0 ); ( Wall, 11, 3, 0.0, 1.0 ); ( Wall, 12, 3, 0.0, 1.0 ); ( Wall, 13, 3, 0.0, 1.0 ); ( Wall, 14, 3, 0.0, 1.0 ); ( Wall, 15, 3, 0.0, 1.0 ); ( Wall, 16, 3, 0.0, 1.0 ); ( Wall, 17, 3, 0.0, 1.0 ); ( Wall, 18, 3, 0.0, 1.0 ); ( Wall, 19, 3, 0.0, 1.0 ); ( Wall, 20, 3, 0.0, 1.0 ); ( Wall, 0, 4, 0.0, 1.0 ); ( Wall, 1, 4, 0.0, 1.0 ); ( Wall, 2, 4, 0.0, 1.0 ); ( Wall, 3, 4, 0.0, 1.0 ); ( Wall, 4, 4, 0.0, 1.0 ); ( Wall, 5, 4, 0.0, 1.0 ); ( Wall, 6, 4, 0.0, 1.0 ); ( Wall, 7, 4, 0.0, 1.0 ); ( Wall, 8, 4, 0.0, 1.0 ); ( Wall, 9, 4, 0.0, 1.0 ); ( Wall, 10, 4, 0.0, 1.0 ); ( Wall, 11, 4, 0.0, 1.0 ); ( Wall, 12, 4, 0.0, 1.0 ); ( Wall, 13, 4, 0.0, 1.0 ); ( Wall, 14, 4, 0.0, 1.0 ); ( Wall, 15, 4, 0.0, 1.0 ); ( Wall, 16, 4, 0.0, 1.0 ); ( Wall, 17, 4, 0.0, 1.0 ); ( Wall, 18, 4, 0.0, 1.0 ); ( Wall, 19, 4, 0.0, 1.0 ); ( Wall, 20, 4, 0.0, 1.0 ); ( Wall, 0, 5, 0.0, 1.0 ); ( Wall, 1, 5, 0.0, 1.0 ); ( Wall, 2, 5, 0.0, 1.0 ); ( Wall, 3, 5, 0.0, 1.0 ); ( Wall, 4, 5, 0.0, 1.0 ); ( Wall, 5, 5, 0.0, 1.0 ); ( Wall, 6, 5, 0.0, 1.0 ); ( Wall, 7, 5, 0.0, 1.0 ); ( Wall, 8, 5, 0.0, 1.0 ); ( Wall, 9, 5, 0.0, 1.0 ); ( Wall, 10, 5, 0.0, 1.0 ); ( Wall, 11, 5, 0.0, 1.0 ); ( Wall, 12, 5, 0.0, 1.0 ); ( Wall, 13, 5, 0.0, 1.0 ); ( Wall, 14, 5, 0.0, 1.0 ); ( Wall, 15, 5, 0.0, 1.0 ); ( Wall, 16, 5, 0.0, 1.0 ); ( Wall, 17, 5, 0.0, 1.0 ); ( Wall, 18, 5, 0.0, 1.0 ); ( Wall, 19, 5, 0.0, 1.0 ); ( Wall, 20, 5, 0.0, 1.0 ); ( Wall, 0, 6, 0.0, 1.0 ); ( Wall, 1, 6, 0.0, 1.0 ); ( Wall, 2, 6, 0.0, 1.0 ); ( Wall, 3, 6, 0.0, 1.0 ); ( Wall, 4, 6, 0.0, 1.0 ); ( Wall, 5, 6, 0.0, 1.0 ); ( Wall, 6, 6, 0.0, 1.0 ); ( Wall, 7, 6, 0.0, 1.0 ); ( Wall, 8, 6, 0.0, 1.0 ); ( Wall, 9, 6, 0.0, 1.0 ); ( Wall, 10, 6, 0.0, 1.0 ); ( Wall, 11, 6, 0.0, 1.0 ); ( Wall, 12, 6, 0.0, 1.0 ); ( Wall, 13, 6, 0.0, 1.0 ); ( Wall, 14, 6, 0.0, 1.0 ); ( Wall, 15, 6, 0.0, 1.0 ); ( Wall, 16, 6, 0.0, 1.0 ); ( Wall, 17, 6, 0.0, 1.0 ); ( Wall, 18, 6, 0.0, 1.0 ); ( Wall, 19, 6, 0.0, 1.0 ); ( Wall, 20, 6, 0.0, 1.0 ); ( Wall, 0, 7, 0.0, 1.0 ); ( Wall, 1, 7, 0.0, 1.0 ); ( Wall, 2, 7, 0.0, 1.0 ); ( Wall, 3, 7, 0.0, 1.0 ); ( Wall, 4, 7, 0.0, 1.0 ); ( Wall, 5, 7, 0.0, 1.0 ); ( Wall, 6, 7, 0.0, 1.0 ); ( Wall, 7, 7, 0.0, 1.0 ); ( Wall, 8, 7, 0.0, 1.0 ); ( Wall, 9, 7, 0.0, 1.0 ); ( Wall, 10, 7, 0.0, 1.0 ); ( Wall, 11, 7, 0.0, 1.0 ); ( Wall, 12, 7, 0.0, 1.0 ); ( Wall, 13, 7, 0.0, 1.0 ); ( Wall, 14, 7, 0.0, 1.0 ); ( Wall, 15, 7, 0.0, 1.0 ); ( Wall, 16, 7, 0.0, 1.0 ); ( Wall, 17, 7, 0.0, 1.0 ); ( Wall, 18, 7, 0.0, 1.0 ); ( Wall, 19, 7, 0.0, 1.0 ); ( Wall, 20, 7, 0.0, 1.0 ); ( Wall, 0, 8, 0.0, 1.0 ); ( Wall, 1, 8, 0.0, 1.0 ); ( Wall, 2, 8, 0.0, 1.0 ); ( Wall, 3, 8, 0.0, 1.0 ); ( Wall, 4, 8, 0.0, 1.0 ); ( Wall, 5, 8, 0.0, 1.0 ); ( Wall, 6, 8, 0.0, 1.0 ); ( Wall, 7, 8, 0.0, 1.0 ); ( Wall, 8, 8, 0.0, 1.0 ); ( Wall, 9, 8, 0.0, 1.0 ); ( Wall, 10, 8, 0.0, 1.0 ); ( Wall, 11, 8, 0.0, 1.0 ); ( Wall, 12, 8, 0.0, 1.0 ); ( Wall, 13, 8, 0.0, 1.0 ); ( Wall, 14, 8, 0.0, 1.0 ); ( Wall, 15, 8, 0.0, 1.0 ); ( Wall, 16, 8, 0.0, 1.0 ); ( Wall, 17, 8, 0.0, 1.0 ); ( Wall, 18, 8, 0.0, 1.0 ); ( Wall, 19, 8, 0.0, 1.0 ); ( Wall, 20, 8, 0.0, 1.0 ); ( Wall, 0, 9, 0.0, 1.0 ); ( Wall, 1, 9, 0.0, 1.0 ); ( Wall, 2, 9, 0.0, 1.0 ); ( Wall, 3, 9, 0.0, 1.0 ); ( Wall, 4, 9, 0.0, 1.0 ); ( Wall, 5, 9, 0.0, 1.0 ); ( Wall, 6, 9, 0.0, 1.0 ); ( Wall, 7, 9, 0.0, 1.0 ); ( Wall, 8, 9, 0.0, 1.0 ); ( Wall, 9, 9, 0.0, 1.0 ); ( Wall, 10, 9, 0.0, 1.0 ); ( Wall, 11, 9, 0.0, 1.0 ); ( Wall, 12, 9, 0.0, 1.0 ); ( Wall, 13, 9, 0.0, 1.0 ); ( Wall, 14, 9, 0.0, 1.0 ); ( Wall, 15, 9, 0.0, 1.0 ); ( Wall, 16, 9, 0.0, 1.0 ); ( Wall, 17, 9, 0.0, 1.0 ); ( Wall, 18, 9, 0.0, 1.0 ); ( Wall, 19, 9, 0.0, 1.0 ); ( Wall, 20, 9, 0.0, 1.0 ); ( Wall, 0, 10, 0.0, 1.0 ); ( Wall, 1, 10, 0.0, 1.0 ); ( Wall, 2, 10, 0.0, 1.0 ); ( Wall, 3, 10, 0.0, 1.0 ); ( Wall, 4, 10, 0.0, 1.0 ); ( Wall, 5, 10, 0.0, 1.0 ); ( Wall, 6, 10, 0.0, 1.0 ); ( Wall, 7, 10, 0.0, 1.0 ); ( Wall, 8, 10, 0.0, 1.0 ); ( Wall, 9, 10, 0.0, 1.0 ); ( Wall, 10, 10, 0.0, 1.0 ); ( Wall, 11, 10, 0.0, 1.0 ); ( Wall, 12, 10, 0.0, 1.0 ); ( Wall, 13, 10, 0.0, 1.0 ); ( Wall, 14, 10, 0.0, 1.0 ); ( Wall, 15, 10, 0.0, 1.0 ); ( Wall, 16, 10, 0.0, 1.0 ); ( Wall, 17, 10, 0.0, 1.0 ); ( Wall, 18, 10, 0.0, 1.0 ); ( Wall, 19, 10, 0.0, 1.0 ); ( Wall, 20, 10, 0.0, 1.0 )
DV_VALUE = 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00129175155716276, -0.00907433651170483, -0.0114724721727136, -0.00802655416368336, -0.00362103491883374, -0.000412763756719623, 0.00171535055924351, 0.00309969471337214, 0.00342009041156534, 0.00219102947315031, -0.000262288023363928, -0.00252327918522118, -0.00302217291409679, -0.00133266377132207, 0.00141170303570195, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00226056522503468, -0.0158800888954835, -0.0200768263022489, -0.0140464697864458, -0.00633681110795905, -0.000722336574259344, 0.00300186347867617, 0.00542446574840127, 0.00598515822023939, 0.00383430157801308, -0.000459004040886793, -0.00441573857413699, -0.00528880259966936, -0.00233216159981362, 0.00247048031247839, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00271267827004161, -0.0190561066745803, -0.0240921915626986, -0.016855763743735, -0.00760417332955085, -0.000866803889111201, 0.00360223617441141, 0.00650935889808156, 0.00718218986428731, 0.0046011618936157, -0.000550804849064085, -0.00529888628896434, -0.00634656311960315, -0.00279859391977633, 0.00296457637497405, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00226056522503457, -0.0158800888954835, -0.0200768263022488, -0.0140464697864458, -0.00633681110795903, -0.000722336574259332, 0.00300186347867618, 0.0054244657484013, 0.00598515822023944, 0.00383430157801315, -0.000459004040886724, -0.00441573857413693, -0.00528880259966932, -0.00233216159981362, 0.00247048031247836, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00129175155716259, -0.00907433651170489, -0.0114724721727136, -0.00802655416368332, -0.00362103491883372, -0.000412763756719608, 0.00171535055924353, 0.00309969471337218, 0.00342009041156539, 0.0021910294731504, -0.000262288023363845, -0.00252327918522111, -0.00302217291409675, -0.00133266377132207, 0.00141170303570191, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.000484406833935926, -0.00340287619188933, -0.0043021770647676, -0.00300995781138124, -0.00135788809456265, -0.000154786408769853, 0.000643256459716327, 0.00116238551751458, 0.00128253390433703, 0.000821636052431397, -9.83580087614185e-05, -0.000946229694457897, -0.00113331484278627, -0.000499748914245778, 0.000529388638388212, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.000107645963096879, -0.000756194709308745, -0.000956039347726133, -0.000668879513640276, -0.00030175290990281, -3.43969797266334e-05, 0.000142945879936963, 0.000258307892781018, 0.00028500753429712, 0.0001825857894292, -2.18573352803141e-05, -0.000210273265435086, -0.000251847742841393, -0.000111055314276839, 0.000117641919641824, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.07645963096874e-05, -7.56194709308742e-05, -9.56039347726133e-05, -6.68879513640275e-05, -3.01752909902809e-05, -3.43969797266333e-06, 1.42945879936963e-05, 2.58307892781018e-05, 2.85007534297121e-05, 1.82585789429206e-05, -2.18573352803121e-06, -2.10273265435087e-05, -2.51847742841392e-05, -1.11055314276839e-05, 1.17641919641823e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.00510136207119119, 0.0363205004311635, 0.0458897601213177, 0.0321054528349801, 0.0144886905200206, 0.00166098885429838, -0.00684656414287383, -0.012379346296879, -0.0136569105921525, -0.00873784285548856, 0.00107637197699328, 0.0101188493308869, 0.012109947389493, 0.00534285449838623, -0.00564876897040725, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.00892738362458431, 0.0635608757545364, 0.0803070802123061, 0.0561845424612151, 0.0253552084100361, 0.00290673049502216, -0.0119814872500292, -0.0216638560195383, -0.0238995935362669, -0.0152912249971052, 0.00188365095973797, 0.0177079863290521, 0.0211924079316128, 0.00934999537217596, -0.00988534569821262, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0107128603495006, 0.0762730509054438, 0.0963684962547671, 0.0674214509534582, 0.0304262500920433, 0.00348807659402653, -0.0143777847000351, -0.0259966272234461, -0.0286795122435204, -0.0183494699965264, 0.00226038115168564, 0.0212495835948625, 0.0254308895179354, 0.0112199944466111, -0.011862414837855, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.00892738362458398, 0.0635608757545366, 0.080307080212306, 0.056184542461215, 0.025355208410036, 0.00290673049502211, -0.0119814872500293, -0.0216638560195385, -0.0238995935362671, -0.0152912249971054, 0.00188365095973775, 0.0177079863290519, 0.0211924079316127, 0.00934999537217597, -0.00988534569821247, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.00510136207119042, 0.0363205004311636, 0.0458897601213176, 0.03210545283498, 0.0144886905200206, 0.00166098885429832, -0.00684656414287391, -0.0123793462968792, -0.0136569105921527, -0.0087378428554889, 0.00107637197699298, 0.0101188493308867, 0.0121099473894929, 0.00534285449838623, -0.00564876897040708, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.00191301077669636, 0.0136201876616864, 0.0172086600454941, 0.0120395448131175, 0.00543325894500771, 0.000622870820361868, -0.00256746155357773, -0.00464225486132967, -0.00512134147205728, -0.00327669107080836, 0.000403639491372371, 0.0037945684990825, 0.00454123027105983, 0.00200357043689485, -0.00211828836390264, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.000425113505932516, 0.00302670836926365, 0.00382414667677648, 0.00267545440291499, 0.00120739087666838, 0.000138415737858191, -0.000570547011906162, -0.0010316121914066, -0.0011380758826794, -0.000728153571290753, 8.9697664749408e-05, 0.000843237444240539, 0.00100916228245774, 0.000445237874865526, -0.000470730747533918, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -4.25113505932509e-05, 0.000302670836926364, 0.000382414667677647, 0.000267545440291499, 0.000120739087666838, 1.38415737858189e-05, -5.70547011906165e-05, -0.000103161219140661, -0.000113807588267941, -7.2815357129076e-05, 8.96976647493967e-06, 8.43237444240535e-05, 0.000100916228245774, 4.45237874865521e-05, -4.70730747533913e-05, 0.0, 0.0, 0.0

