% ------------- DIRECT, ADJOINT, AND LINEARIZED PROBLEM DEFINITION ------------%
%
% Physical governing equations (EULER, NAVIER_STOKES,
%                               WAVE_EQUATION, HEAT_EQUATION, FEM_ELASTICITY,
%                               POISSON_EQUATION)
SOLVER= EULER
MATH_PROBLEM= DISCRETE_ADJOINT
RESTART_SOL= NO
MULTIZONE= YES
OUTER_ITER = 10000
TIME_DOMAIN = NO
INNER_ITER = 1
OBJECTIVE_FUNCTION = CUSTOM_OBJFUNC
CUSTOM_OBJFUNC = 0
%
% ----------- COMPRESSIBLE AND INCOMPRESSIBLE FREE-STREAM DEFINITION ----------%
%
% Mach number (non-dimensional, based on the free-stream values)
MACH_NUMBER= 2.0
AOA= 0.0
SIDESLIP_ANGLE= 0.0
FREESTREAM_PRESSURE= 100000.0
FREESTREAM_TEMPERATURE= 300.0
REF_DIMENSIONALIZATION= DIMENSIONAL
%
% ---------------------- REFERENCE VALUE DEFINITION ---------------------------%
%
% Reference origin for moment computation
REF_ORIGIN_MOMENT_X = 0.25
REF_ORIGIN_MOMENT_Y = 0.00
REF_ORIGIN_MOMENT_Z = 0.00
REF_LENGTH= 1.0
REF_AREA= 1.0
%
% -------------------- BOUNDARY CONDITION DEFINITION --------------------------%
%
% Euler wall boundary marker(s) (NONE = no marker)
MARKER_EULER= ( Wall )
MARKER_SUPERSONIC_INLET= ( Inlet, 300.0, 100000.0, 695.4290761825, 0.0, 0.0 )
MARKER_SUPERSONIC_OUTLET= ( Outlet )
MARKER_FAR = (Far)
%
% ------------------------ SURFACES IDENTIFICATION ----------------------------%
%
MARKER_PLOTTING= ( Wall )
MARKER_MONITORING= ( Wall )
MARKER_DESIGNING = ( Wall )
MARKER_ANALYZE = (Wall)
MARKER_ANALYZE_AVERAGE = MASSFLUX
%
% ------------- COMMON PARAMETERS DEFINING THE NUMERICAL METHOD ---------------%
%
% Numerical method for spatial gradients (GREEN_GAUSS, LEAST_SQUARES, 
%                                         WEIGHTED_LEAST_SQUARES)
NUM_METHOD_GRAD= WEIGHTED_LEAST_SQUARES
CFL_NUMBER= 5.0
CFL_ADAPT= YES
CFL_ADAPT_PARAM= ( 0.9, 1.1, 0.1, 1e10 )
RK_ALPHA_COEFF= ( 0.66667, 0.66667, 1.000000 )
LINEAR_SOLVER= BCGSTAB
LINEAR_SOLVER_PREC= ILU
LINEAR_SOLVER_ERROR= 1E-5
LINEAR_SOLVER_ITER= 50
NEWTON_KRYLOV= YES
NEWTON_KRYLOV_IPARAM= (0, 5, 1) % n0, np, ft
NEWTON_KRYLOV_DPARAM= (0.0, 1e-5, -1.0, 1e-3) % r0, tp, rf, e
%
% -------------------------- MULTIGRID PARAMETERS -----------------------------%
%
% Multi-Grid Levels (0 = no multi-grid)
MGLEVEL= 3
MGCYCLE= W_CYCLE
MG_PRE_SMOOTH= ( 1, 2, 3, 3 )
MG_POST_SMOOTH= ( 0, 0, 0, 0 )
MG_CORRECTION_SMOOTH= ( 0, 0, 0, 0 )
MG_DAMP_RESTRICTION= 1.0
MG_DAMP_PROLONGATION= 1.0
%
% -------------------- FLOW NUMERICAL METHOD DEFINITION -----------------------%
%
% Convective numerical method (JST, LAX-FRIEDRICH, CUSP, ROE, AUSM, HLLC,
%                              TURKEL_PREC, MSW)
CONV_NUM_METHOD_FLOW= JST
JST_SENSOR_COEFF= ( 0.5, 0.02 )
TIME_DISCRE_FLOW= EULER_IMPLICIT
%
% --------------------------- CONVERGENCE PARAMETERS --------------------------%
%
CONV_FIELD= RMS_ADJ_DENSITY[0]
CONV_RESIDUAL_MINVAL= -14
CONV_STARTITER= 10
CONV_CAUCHY_ELEMS= 100
CONV_CAUCHY_EPS= 1E-10
%
% ------------------------- INPUT/OUTPUT INFORMATION --------------------------%
%
OUTPUT_PRECISION = 15
MESH_FILENAME= ../wedge_with_ffd.su2
MESH_FORMAT= SU2
MESH_OUT_FILENAME= def_out_1.su2
SOLUTION_FILENAME= restart_flow.dat
SOLUTION_ADJ_FILENAME= restart_adj.dat
TABULAR_FORMAT= CSV
CONV_FILENAME= history
RESTART_FILENAME= restart_flow.dat
RESTART_ADJ_FILENAME= restart_adj.dat
VOLUME_FILENAME= flow
VOLUME_ADJ_FILENAME= adjoint
GRAD_OBJFUNC_FILENAME= of_grad.dat
SURFACE_FILENAME= surface_flow
SURFACE_ADJ_FILENAME= surface_adjoint
SCREEN_OUTPUT = (OUTER_ITER, RMS_RES[0], RMS_RES[1], RMS_RES[2], RMS_RES[3], RMS_RES[4], AVG_CFL[0], DRAG[0], LIFT[0])
HISTORY_OUTPUT =(OUTER_ITER, RMS_RES[0], RMS_RES[1], RMS_RES[2], RMS_RES[3], RMS_RES[4], AVG_CFL[0], DRAG[0], LIFT[0])
WRT_PERFORMANCE= YES
WRT_AD_STATISTICS= YES
WRT_RESTART_OVERWRITE= YES
WRT_SURFACE_OVERWRITE= YES
WRT_VOLUME_OVERWRITE= YES
WRT_FORCES_BREAKDOWN= YES
BREAKDOWN_FILENAME= forces_breakdown.dat
%
% -------------------- ADJOINT-SOLVER-NUMEROCAL-METHOD -----------------------%
MUSCL_ADJFLOW = NO
SLOPE_LIMITER_ADJFLOW = NONE
MUSCL_ADJTURB = NO
SLOPE_LIMITER_ADJTURB = NONE
DISCADJ_LIN_SOLVER = BCGSTAB
DISCADJ_LIN_PREC = ILU
FROZEN_LIMITER_DISC= NO
FROZEN_VISC_DISC= NO
INCONSISTENT_DISC= YES
CONV_NUM_METHOD_ADJFLOW= JST
TIME_DISCRE_ADJFLOW= EULER_IMPLICIT
RELAXATION_FACTOR_ADJOINT= 1.0
QUASI_NEWTON_NUM_SAMPLES= 20
CFL_REDUCTION_ADJFLOW= 0.8
% Limit value for the adjoint variable
LIMIT_ADJFLOW= 1E6
MG_ADJFLOW= YES
ADJ_JST_SENSOR_COEFF= ( 0.5, 0.02 )
%
% -------------------- FREE-FORM DEFORMATION PARAMETERS -----------------------%
%
DV_MARKER = ( Wall )
FFD_TOLERANCE = 1E-10
FFD_ITERATIONS = 1000
FFD_CONTINUITY = 2ND_DERIVATIVE
DV_FILENAME = mesh_motion.data
FFD_FIX_I = (0, 150)
FFD_FIX_J = (150)
FFD_FIX_K = (150)
FFD_DEFINITION = (Wall, (2, -0.1, 0, 6, 0.9, 0, 6, 1.1, 0, 2, 0.1, 0), (0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))
FFD_DEGREE = (20, 10, 0)
DEFINITION_DV = ( 19, 1.0 | Wall | BOX1, 0, 0, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 1, 0, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 2, 0, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 3, 0, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 4, 0, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 5, 0, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 6, 0, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 7, 0, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 8, 0, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 9, 0, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 10, 0, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 11, 0, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 12, 0, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 13, 0, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 14, 0, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 15, 0, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 16, 0, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 17, 0, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 18, 0, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 19, 0, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 20, 0, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 0, 1, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 1, 1, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 2, 1, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 3, 1, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 4, 1, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 5, 1, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 6, 1, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 7, 1, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 8, 1, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 9, 1, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 10, 1, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 11, 1, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 12, 1, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 13, 1, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 14, 1, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 15, 1, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 16, 1, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 17, 1, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 18, 1, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 19, 1, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 20, 1, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 0, 2, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 1, 2, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 2, 2, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 3, 2, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 4, 2, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 5, 2, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 6, 2, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 7, 2, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 8, 2, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 9, 2, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 10, 2, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 11, 2, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 12, 2, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 13, 2, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 14, 2, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 15, 2, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 16, 2, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 17, 2, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 18, 2, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 19, 2, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 20, 2, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 0, 3, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 1, 3, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 2, 3, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 3, 3, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 4, 3, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 5, 3, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 6, 3, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 7, 3, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 8, 3, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 9, 3, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 10, 3, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 11, 3, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 12, 3, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 13, 3, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 14, 3, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 15, 3, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 16, 3, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 17, 3, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 18, 3, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 19, 3, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 20, 3, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 0, 4, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 1, 4, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 2, 4, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 3, 4, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 4, 4, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 5, 4, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 6, 4, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 7, 4, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 8, 4, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 9, 4, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 10, 4, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 11, 4, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 12, 4, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 13, 4, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 14, 4, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 15, 4, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 16, 4, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 17, 4, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 18, 4, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 19, 4, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 20, 4, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 0, 5, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 1, 5, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 2, 5, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 3, 5, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 4, 5, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 5, 5, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 6, 5, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 7, 5, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 8, 5, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 9, 5, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 10, 5, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 11, 5, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 12, 5, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 13, 5, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 14, 5, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 15, 5, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 16, 5, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 17, 5, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 18, 5, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 19, 5, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 20, 5, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 0, 6, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 1, 6, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 2, 6, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 3, 6, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 4, 6, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 5, 6, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 6, 6, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 7, 6, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 8, 6, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 9, 6, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 10, 6, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 11, 6, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 12, 6, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 13, 6, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 14, 6, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 15, 6, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 16, 6, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 17, 6, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 18, 6, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 19, 6, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 20, 6, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 0, 7, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 1, 7, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 2, 7, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 3, 7, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 4, 7, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 5, 7, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 6, 7, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 7, 7, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 8, 7, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 9, 7, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 10, 7, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 11, 7, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 12, 7, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 13, 7, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 14, 7, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 15, 7, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 16, 7, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 17, 7, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 18, 7, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 19, 7, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 20, 7, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 0, 8, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 1, 8, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 2, 8, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 3, 8, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 4, 8, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 5, 8, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 6, 8, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 7, 8, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 8, 8, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 9, 8, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 10, 8, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 11, 8, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 12, 8, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 13, 8, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 14, 8, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 15, 8, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 16, 8, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 17, 8, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 18, 8, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 19, 8, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 20, 8, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 0, 9, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 1, 9, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 2, 9, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 3, 9, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 4, 9, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 5, 9, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 6, 9, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 7, 9, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 8, 9, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 9, 9, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 10, 9, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 11, 9, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 12, 9, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 13, 9, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 14, 9, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 15, 9, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 16, 9, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 17, 9, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 18, 9, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 19, 9, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 20, 9, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 0, 10, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 1, 10, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 2, 10, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 3, 10, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 4, 10, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 5, 10, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 6, 10, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 7, 10, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 8, 10, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 9, 10, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 10, 10, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 11, 10, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 12, 10, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 13, 10, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 14, 10, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 15, 10, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 16, 10, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 17, 10, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 18, 10, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 19, 10, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 20, 10, 1.0, 0.0 ); ( 19, 1.0 | Wall | BOX1, 0, 0, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 1, 0, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 2, 0, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 3, 0, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 4, 0, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 5, 0, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 6, 0, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 7, 0, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 8, 0, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 9, 0, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 10, 0, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 11, 0, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 12, 0, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 13, 0, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 14, 0, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 15, 0, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 16, 0, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 17, 0, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 18, 0, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 19, 0, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 20, 0, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 0, 1, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 1, 1, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 2, 1, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 3, 1, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 4, 1, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 5, 1, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 6, 1, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 7, 1, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 8, 1, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 9, 1, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 10, 1, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 11, 1, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 12, 1, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 13, 1, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 14, 1, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 15, 1, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 16, 1, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 17, 1, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 18, 1, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 19, 1, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 20, 1, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 0, 2, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 1, 2, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 2, 2, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 3, 2, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 4, 2, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 5, 2, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 6, 2, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 7, 2, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 8, 2, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 9, 2, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 10, 2, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 11, 2, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 12, 2, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 13, 2, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 14, 2, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 15, 2, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 16, 2, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 17, 2, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 18, 2, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 19, 2, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 20, 2, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 0, 3, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 1, 3, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 2, 3, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 3, 3, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 4, 3, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 5, 3, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 6, 3, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 7, 3, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 8, 3, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 9, 3, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 10, 3, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 11, 3, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 12, 3, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 13, 3, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 14, 3, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 15, 3, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 16, 3, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 17, 3, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 18, 3, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 19, 3, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 20, 3, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 0, 4, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 1, 4, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 2, 4, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 3, 4, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 4, 4, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 5, 4, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 6, 4, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 7, 4, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 8, 4, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 9, 4, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 10, 4, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 11, 4, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 12, 4, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 13, 4, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 14, 4, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 15, 4, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 16, 4, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 17, 4, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 18, 4, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 19, 4, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 20, 4, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 0, 5, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 1, 5, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 2, 5, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 3, 5, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 4, 5, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 5, 5, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 6, 5, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 7, 5, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 8, 5, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 9, 5, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 10, 5, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 11, 5, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 12, 5, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 13, 5, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 14, 5, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 15, 5, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 16, 5, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 17, 5, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 18, 5, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 19, 5, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 20, 5, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 0, 6, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 1, 6, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 2, 6, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 3, 6, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 4, 6, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 5, 6, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 6, 6, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 7, 6, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 8, 6, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 9, 6, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 10, 6, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 11, 6, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 12, 6, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 13, 6, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 14, 6, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 15, 6, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 16, 6, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 17, 6, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 18, 6, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 19, 6, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 20, 6, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 0, 7, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 1, 7, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 2, 7, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 3, 7, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 4, 7, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 5, 7, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 6, 7, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 7, 7, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 8, 7, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 9, 7, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 10, 7, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 11, 7, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 12, 7, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 13, 7, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 14, 7, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 15, 7, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 16, 7, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 17, 7, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 18, 7, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 19, 7, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 20, 7, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 0, 8, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 1, 8, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 2, 8, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 3, 8, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 4, 8, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 5, 8, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 6, 8, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 7, 8, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 8, 8, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 9, 8, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 10, 8, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 11, 8, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 12, 8, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 13, 8, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 14, 8, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 15, 8, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 16, 8, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 17, 8, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 18, 8, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 19, 8, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 20, 8, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 0, 9, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 1, 9, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 2, 9, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 3, 9, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 4, 9, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 5, 9, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 6, 9, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 7, 9, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 8, 9, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 9, 9, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 10, 9, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 11, 9, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 12, 9, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 13, 9, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 14, 9, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 15, 9, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 16, 9, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 17, 9, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 18, 9, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 19, 9, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 20, 9, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 0, 10, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 1, 10, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 2, 10, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 3, 10, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 4, 10, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 5, 10, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 6, 10, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 7, 10, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 8, 10, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 9, 10, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 10, 10, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 11, 10, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 12, 10, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 13, 10, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 14, 10, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 15, 10, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 16, 10, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 17, 10, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 18, 10, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 19, 10, 0.0, 1.0 ); ( 19, 1.0 | Wall | BOX1, 20, 10, 0.0, 1.0 )

% FOR DOT:
DV_KIND= FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D
DV_PARAM= ( Wall, 0, 0, 1.0, 0.0 ); ( Wall, 1, 0, 1.0, 0.0 ); ( Wall, 2, 0, 1.0, 0.0 ); ( Wall, 3, 0, 1.0, 0.0 ); ( Wall, 4, 0, 1.0, 0.0 ); ( Wall, 5, 0, 1.0, 0.0 ); ( Wall, 6, 0, 1.0, 0.0 ); ( Wall, 7, 0, 1.0, 0.0 ); ( Wall, 8, 0, 1.0, 0.0 ); ( Wall, 9, 0, 1.0, 0.0 ); ( Wall, 10, 0, 1.0, 0.0 ); ( Wall, 11, 0, 1.0, 0.0 ); ( Wall, 12, 0, 1.0, 0.0 ); ( Wall, 13, 0, 1.0, 0.0 ); ( Wall, 14, 0, 1.0, 0.0 ); ( Wall, 15, 0, 1.0, 0.0 ); ( Wall, 16, 0, 1.0, 0.0 ); ( Wall, 17, 0, 1.0, 0.0 ); ( Wall, 18, 0, 1.0, 0.0 ); ( Wall, 19, 0, 1.0, 0.0 ); ( Wall, 20, 0, 1.0, 0.0 ); ( Wall, 0, 1, 1.0, 0.0 ); ( Wall, 1, 1, 1.0, 0.0 ); ( Wall, 2, 1, 1.0, 0.0 ); ( Wall, 3, 1, 1.0, 0.0 ); ( Wall, 4, 1, 1.0, 0.0 ); ( Wall, 5, 1, 1.0, 0.0 ); ( Wall, 6, 1, 1.0, 0.0 ); ( Wall, 7, 1, 1.0, 0.0 ); ( Wall, 8, 1, 1.0, 0.0 ); ( Wall, 9, 1, 1.0, 0.0 ); ( Wall, 10, 1, 1.0, 0.0 ); ( Wall, 11, 1, 1.0, 0.0 ); ( Wall, 12, 1, 1.0, 0.0 ); ( Wall, 13, 1, 1.0, 0.0 ); ( Wall, 14, 1, 1.0, 0.0 ); ( Wall, 15, 1, 1.0, 0.0 ); ( Wall, 16, 1, 1.0, 0.0 ); ( Wall, 17, 1, 1.0, 0.0 ); ( Wall, 18, 1, 1.0, 0.0 ); ( Wall, 19, 1, 1.0, 0.0 ); ( Wall, 20, 1, 1.0, 0.0 ); ( Wall, 0, 2, 1.0, 0.0 ); ( Wall, 1, 2, 1.0, 0.0 ); ( Wall, 2, 2, 1.0, 0.0 ); ( Wall, 3, 2, 1.0, 0.0 ); ( Wall, 4, 2, 1.0, 0.0 ); ( Wall, 5, 2, 1.0, 0.0 ); ( Wall, 6, 2, 1.0, 0.0 ); ( Wall, 7, 2, 1.0, 0.0 ); ( Wall, 8, 2, 1.0, 0.0 ); ( Wall, 9, 2, 1.0, 0.0 ); ( Wall, 10, 2, 1.0, 0.0 ); ( Wall, 11, 2, 1.0, 0.0 ); ( Wall, 12, 2, 1.0, 0.0 ); ( Wall, 13, 2, 1.0, 0.0 ); ( Wall, 14, 2, 1.0, 0.0 ); ( Wall, 15, 2, 1.0, 0.0 ); ( Wall, 16, 2, 1.0, 0.0 ); ( Wall, 17, 2, 1.0, 0.0 ); ( Wall, 18, 2, 1.0, 0.0 ); ( Wall, 19, 2, 1.0, 0.0 ); ( Wall, 20, 2, 1.0, 0.0 ); ( Wall, 0, 3, 1.0, 0.0 ); ( Wall, 1, 3, 1.0, 0.0 ); ( Wall, 2, 3, 1.0, 0.0 ); ( Wall, 3, 3, 1.0, 0.0 ); ( Wall, 4, 3, 1.0, 0.0 ); ( Wall, 5, 3, 1.0, 0.0 ); ( Wall, 6, 3, 1.0, 0.0 ); ( Wall, 7, 3, 1.0, 0.0 ); ( Wall, 8, 3, 1.0, 0.0 ); ( Wall, 9, 3, 1.0, 0.0 ); ( Wall, 10, 3, 1.0, 0.0 ); ( Wall, 11, 3, 1.0, 0.0 ); ( Wall, 12, 3, 1.0, 0.0 ); ( Wall, 13, 3, 1.0, 0.0 ); ( Wall, 14, 3, 1.0, 0.0 ); ( Wall, 15, 3, 1.0, 0.0 ); ( Wall, 16, 3, 1.0, 0.0 ); ( Wall, 17, 3, 1.0, 0.0 ); ( Wall, 18, 3, 1.0, 0.0 ); ( Wall, 19, 3, 1.0, 0.0 ); ( Wall, 20, 3, 1.0, 0.0 ); ( Wall, 0, 4, 1.0, 0.0 ); ( Wall, 1, 4, 1.0, 0.0 ); ( Wall, 2, 4, 1.0, 0.0 ); ( Wall, 3, 4, 1.0, 0.0 ); ( Wall, 4, 4, 1.0, 0.0 ); ( Wall, 5, 4, 1.0, 0.0 ); ( Wall, 6, 4, 1.0, 0.0 ); ( Wall, 7, 4, 1.0, 0.0 ); ( Wall, 8, 4, 1.0, 0.0 ); ( Wall, 9, 4, 1.0, 0.0 ); ( Wall, 10, 4, 1.0, 0.0 ); ( Wall, 11, 4, 1.0, 0.0 ); ( Wall, 12, 4, 1.0, 0.0 ); ( Wall, 13, 4, 1.0, 0.0 ); ( Wall, 14, 4, 1.0, 0.0 ); ( Wall, 15, 4, 1.0, 0.0 ); ( Wall, 16, 4, 1.0, 0.0 ); ( Wall, 17, 4, 1.0, 0.0 ); ( Wall, 18, 4, 1.0, 0.0 ); ( Wall, 19, 4, 1.0, 0.0 ); ( Wall, 20, 4, 1.0, 0.0 ); ( Wall, 0, 5, 1.0, 0.0 ); ( Wall, 1, 5, 1.0, 0.0 ); ( Wall, 2, 5, 1.0, 0.0 ); ( Wall, 3, 5, 1.0, 0.0 ); ( Wall, 4, 5, 1.0, 0.0 ); ( Wall, 5, 5, 1.0, 0.0 ); ( Wall, 6, 5, 1.0, 0.0 ); ( Wall, 7, 5, 1.0, 0.0 ); ( Wall, 8, 5, 1.0, 0.0 ); ( Wall, 9, 5, 1.0, 0.0 ); ( Wall, 10, 5, 1.0, 0.0 ); ( Wall, 11, 5, 1.0, 0.0 ); ( Wall, 12, 5, 1.0, 0.0 ); ( Wall, 13, 5, 1.0, 0.0 ); ( Wall, 14, 5, 1.0, 0.0 ); ( Wall, 15, 5, 1.0, 0.0 ); ( Wall, 16, 5, 1.0, 0.0 ); ( Wall, 17, 5, 1.0, 0.0 ); ( Wall, 18, 5, 1.0, 0.0 ); ( Wall, 19, 5, 1.0, 0.0 ); ( Wall, 20, 5, 1.0, 0.0 ); ( Wall, 0, 6, 1.0, 0.0 ); ( Wall, 1, 6, 1.0, 0.0 ); ( Wall, 2, 6, 1.0, 0.0 ); ( Wall, 3, 6, 1.0, 0.0 ); ( Wall, 4, 6, 1.0, 0.0 ); ( Wall, 5, 6, 1.0, 0.0 ); ( Wall, 6, 6, 1.0, 0.0 ); ( Wall, 7, 6, 1.0, 0.0 ); ( Wall, 8, 6, 1.0, 0.0 ); ( Wall, 9, 6, 1.0, 0.0 ); ( Wall, 10, 6, 1.0, 0.0 ); ( Wall, 11, 6, 1.0, 0.0 ); ( Wall, 12, 6, 1.0, 0.0 ); ( Wall, 13, 6, 1.0, 0.0 ); ( Wall, 14, 6, 1.0, 0.0 ); ( Wall, 15, 6, 1.0, 0.0 ); ( Wall, 16, 6, 1.0, 0.0 ); ( Wall, 17, 6, 1.0, 0.0 ); ( Wall, 18, 6, 1.0, 0.0 ); ( Wall, 19, 6, 1.0, 0.0 ); ( Wall, 20, 6, 1.0, 0.0 ); ( Wall, 0, 7, 1.0, 0.0 ); ( Wall, 1, 7, 1.0, 0.0 ); ( Wall, 2, 7, 1.0, 0.0 ); ( Wall, 3, 7, 1.0, 0.0 ); ( Wall, 4, 7, 1.0, 0.0 ); ( Wall, 5, 7, 1.0, 0.0 ); ( Wall, 6, 7, 1.0, 0.0 ); ( Wall, 7, 7, 1.0, 0.0 ); ( Wall, 8, 7, 1.0, 0.0 ); ( Wall, 9, 7, 1.0, 0.0 ); ( Wall, 10, 7, 1.0, 0.0 ); ( Wall, 11, 7, 1.0, 0.0 ); ( Wall, 12, 7, 1.0, 0.0 ); ( Wall, 13, 7, 1.0, 0.0 ); ( Wall, 14, 7, 1.0, 0.0 ); ( Wall, 15, 7, 1.0, 0.0 ); ( Wall, 16, 7, 1.0, 0.0 ); ( Wall, 17, 7, 1.0, 0.0 ); ( Wall, 18, 7, 1.0, 0.0 ); ( Wall, 19, 7, 1.0, 0.0 ); ( Wall, 20, 7, 1.0, 0.0 ); ( Wall, 0, 8, 1.0, 0.0 ); ( Wall, 1, 8, 1.0, 0.0 ); ( Wall, 2, 8, 1.0, 0.0 ); ( Wall, 3, 8, 1.0, 0.0 ); ( Wall, 4, 8, 1.0, 0.0 ); ( Wall, 5, 8, 1.0, 0.0 ); ( Wall, 6, 8, 1.0, 0.0 ); ( Wall, 7, 8, 1.0, 0.0 ); ( Wall, 8, 8, 1.0, 0.0 ); ( Wall, 9, 8, 1.0, 0.0 ); ( Wall, 10, 8, 1.0, 0.0 ); ( Wall, 11, 8, 1.0, 0.0 ); ( Wall, 12, 8, 1.0, 0.0 ); ( Wall, 13, 8, 1.0, 0.0 ); ( Wall, 14, 8, 1.0, 0.0 ); ( Wall, 15, 8, 1.0, 0.0 ); ( Wall, 16, 8, 1.0, 0.0 ); ( Wall, 17, 8, 1.0, 0.0 ); ( Wall, 18, 8, 1.0, 0.0 ); ( Wall, 19, 8, 1.0, 0.0 ); ( Wall, 20, 8, 1.0, 0.0 ); ( Wall, 0, 9, 1.0, 0.0 ); ( Wall, 1, 9, 1.0, 0.0 ); ( Wall, 2, 9, 1.0, 0.0 ); ( Wall, 3, 9, 1.0, 0.0 ); ( Wall, 4, 9, 1.0, 0.0 ); ( Wall, 5, 9, 1.0, 0.0 ); ( Wall, 6, 9, 1.0, 0.0 ); ( Wall, 7, 9, 1.0, 0.0 ); ( Wall, 8, 9, 1.0, 0.0 ); ( Wall, 9, 9, 1.0, 0.0 ); ( Wall, 10, 9, 1.0, 0.0 ); ( Wall, 11, 9, 1.0, 0.0 ); ( Wall, 12, 9, 1.0, 0.0 ); ( Wall, 13, 9, 1.0, 0.0 ); ( Wall, 14, 9, 1.0, 0.0 ); ( Wall, 15, 9, 1.0, 0.0 ); ( Wall, 16, 9, 1.0, 0.0 ); ( Wall, 17, 9, 1.0, 0.0 ); ( Wall, 18, 9, 1.0, 0.0 ); ( Wall, 19, 9, 1.0, 0.0 ); ( Wall, 20, 9, 1.0, 0.0 ); ( Wall, 0, 10, 1.0, 0.0 ); ( Wall, 1, 10, 1.0, 0.0 ); ( Wall, 2, 10, 1.0, 0.0 ); ( Wall, 3, 10, 1.0, 0.0 ); ( Wall, 4, 10, 1.0, 0.0 ); ( Wall, 5, 10, 1.0, 0.0 ); ( Wall, 6, 10, 1.0, 0.0 ); ( Wall, 7, 10, 1.0, 0.0 ); ( Wall, 8, 10, 1.0, 0.0 ); ( Wall, 9, 10, 1.0, 0.0 ); ( Wall, 10, 10, 1.0, 0.0 ); ( Wall, 11, 10, 1.0, 0.0 ); ( Wall, 12, 10, 1.0, 0.0 ); ( Wall, 13, 10, 1.0, 0.0 ); ( Wall, 14, 10, 1.0, 0.0 ); ( Wall, 15, 10, 1.0, 0.0 ); ( Wall, 16, 10, 1.0, 0.0 ); ( Wall, 17, 10, 1.0, 0.0 ); ( Wall, 18, 10, 1.0, 0.0 ); ( Wall, 19, 10, 1.0, 0.0 ); ( Wall, 20, 10, 1.0, 0.0 ); ( Wall, 0, 0, 0.0, 1.0 ); ( Wall, 1, 0, 0.0, 1.0 ); ( Wall, 2, 0, 0.0, 1.0 ); ( Wall, 3, 0, 0.0, 1.0 ); ( Wall, 4, 0, 0.0, 1.0 ); ( Wall, 5, 0, 0.0, 1.0 ); ( Wall, 6, 0, 0.0, 1.0 ); ( Wall, 7, 0, 0.0, 1.0 ); ( Wall, 8, 0, 0.0, 1.0 ); ( Wall, 9, 0, 0.0, 1.0 ); ( Wall, 10, 0, 0.0, 1.0 ); ( Wall, 11, 0, 0.0, 1.0 ); ( Wall, 12, 0, 0.0, 1.0 ); ( Wall, 13, 0, 0.0, 1.0 ); ( Wall, 14, 0, 0.0, 1.0 ); ( Wall, 15, 0, 0.0, 1.0 ); ( Wall, 16, 0, 0.0, 1.0 ); ( Wall, 17, 0, 0.0, 1.0 ); ( Wall, 18, 0, 0.0, 1.0 ); ( Wall, 19, 0, 0.0, 1.0 ); ( Wall, 20, 0, 0.0, 1.0 ); ( Wall, 0, 1, 0.0, 1.0 ); ( Wall, 1, 1, 0.0, 1.0 ); ( Wall, 2, 1, 0.0, 1.0 ); ( Wall, 3, 1, 0.0, 1.0 ); ( Wall, 4, 1, 0.0, 1.0 ); ( Wall, 5, 1, 0.0, 1.0 ); ( Wall, 6, 1, 0.0, 1.0 ); ( Wall, 7, 1, 0.0, 1.0 ); ( Wall, 8, 1, 0.0, 1.0 ); ( Wall, 9, 1, 0.0, 1.0 ); ( Wall, 10, 1, 0.0, 1.0 ); ( Wall, 11, 1, 0.0, 1.0 ); ( Wall, 12, 1, 0.0, 1.0 ); ( Wall, 13, 1, 0.0, 1.0 ); ( Wall, 14, 1, 0.0, 1.0 ); ( Wall, 15, 1, 0.0, 1.0 ); ( Wall, 16, 1, 0.0, 1.0 ); ( Wall, 17, 1, 0.0, 1.0 ); ( Wall, 18, 1, 0.0, 1.0 ); ( Wall, 19, 1, 0.0, 1.0 ); ( Wall, 20, 1, 0.0, 1.0 ); ( Wall, 0, 2, 0.0, 1.0 ); ( Wall, 1, 2, 0.0, 1.0 ); ( Wall, 2, 2, 0.0, 1.0 ); ( Wall, 3, 2, 0.0, 1.0 ); ( Wall, 4, 2, 0.0, 1.0 ); ( Wall, 5, 2, 0.0, 1.0 ); ( Wall, 6, 2, 0.0, 1.0 ); ( Wall, 7, 2, 0.0, 1.0 ); ( Wall, 8, 2, 0.0, 1.0 ); ( Wall, 9, 2, 0.0, 1.0 ); ( Wall, 10, 2, 0.0, 1.0 ); ( Wall, 11, 2, 0.0, 1.0 ); ( Wall, 12, 2, 0.0, 1.0 ); ( Wall, 13, 2, 0.0, 1.0 ); ( Wall, 14, 2, 0.0, 1.0 ); ( Wall, 15, 2, 0.0, 1.0 ); ( Wall, 16, 2, 0.0, 1.0 ); ( Wall, 17, 2, 0.0, 1.0 ); ( Wall, 18, 2, 0.0, 1.0 ); ( Wall, 19, 2, 0.0, 1.0 ); ( Wall, 20, 2, 0.0, 1.0 ); ( Wall, 0, 3, 0.0, 1.0 ); ( Wall, 1, 3, 0.0, 1.0 ); ( Wall, 2, 3, 0.0, 1.0 ); ( Wall, 3, 3, 0.0, 1.0 ); ( Wall, 4, 3, 0.0, 1.0 ); ( Wall, 5, 3, 0.0, 1.0 ); ( Wall, 6, 3, 0.0, 1.0 ); ( Wall, 7, 3, 0.0, 1.0 ); ( Wall, 8, 3, 0.0, 1.0 ); ( Wall, 9, 3, 0.0, 1.0 ); ( Wall, 10, 3, 0.0, 1.0 ); ( Wall, 11, 3, 0.0, 1.0 ); ( Wall, 12, 3, 0.0, 1.0 ); ( Wall, 13, 3, 0.0, 1.0 ); ( Wall, 14, 3, 0.0, 1.0 ); ( Wall, 15, 3, 0.0, 1.0 ); ( Wall, 16, 3, 0.0, 1.0 ); ( Wall, 17, 3, 0.0, 1.0 ); ( Wall, 18, 3, 0.0, 1.0 ); ( Wall, 19, 3, 0.0, 1.0 ); ( Wall, 20, 3, 0.0, 1.0 ); ( Wall, 0, 4, 0.0, 1.0 ); ( Wall, 1, 4, 0.0, 1.0 ); ( Wall, 2, 4, 0.0, 1.0 ); ( Wall, 3, 4, 0.0, 1.0 ); ( Wall, 4, 4, 0.0, 1.0 ); ( Wall, 5, 4, 0.0, 1.0 ); ( Wall, 6, 4, 0.0, 1.0 ); ( Wall, 7, 4, 0.0, 1.0 ); ( Wall, 8, 4, 0.0, 1.0 ); ( Wall, 9, 4, 0.0, 1.0 ); ( Wall, 10, 4, 0.0, 1.0 ); ( Wall, 11, 4, 0.0, 1.0 ); ( Wall, 12, 4, 0.0, 1.0 ); ( Wall, 13, 4, 0.0, 1.0 ); ( Wall, 14, 4, 0.0, 1.0 ); ( Wall, 15, 4, 0.0, 1.0 ); ( Wall, 16, 4, 0.0, 1.0 ); ( Wall, 17, 4, 0.0, 1.0 ); ( Wall, 18, 4, 0.0, 1.0 ); ( Wall, 19, 4, 0.0, 1.0 ); ( Wall, 20, 4, 0.0, 1.0 ); ( Wall, 0, 5, 0.0, 1.0 ); ( Wall, 1, 5, 0.0, 1.0 ); ( Wall, 2, 5, 0.0, 1.0 ); ( Wall, 3, 5, 0.0, 1.0 ); ( Wall, 4, 5, 0.0, 1.0 ); ( Wall, 5, 5, 0.0, 1.0 ); ( Wall, 6, 5, 0.0, 1.0 ); ( Wall, 7, 5, 0.0, 1.0 ); ( Wall, 8, 5, 0.0, 1.0 ); ( Wall, 9, 5, 0.0, 1.0 ); ( Wall, 10, 5, 0.0, 1.0 ); ( Wall, 11, 5, 0.0, 1.0 ); ( Wall, 12, 5, 0.0, 1.0 ); ( Wall, 13, 5, 0.0, 1.0 ); ( Wall, 14, 5, 0.0, 1.0 ); ( Wall, 15, 5, 0.0, 1.0 ); ( Wall, 16, 5, 0.0, 1.0 ); ( Wall, 17, 5, 0.0, 1.0 ); ( Wall, 18, 5, 0.0, 1.0 ); ( Wall, 19, 5, 0.0, 1.0 ); ( Wall, 20, 5, 0.0, 1.0 ); ( Wall, 0, 6, 0.0, 1.0 ); ( Wall, 1, 6, 0.0, 1.0 ); ( Wall, 2, 6, 0.0, 1.0 ); ( Wall, 3, 6, 0.0, 1.0 ); ( Wall, 4, 6, 0.0, 1.0 ); ( Wall, 5, 6, 0.0, 1.0 ); ( Wall, 6, 6, 0.0, 1.0 ); ( Wall, 7, 6, 0.0, 1.0 ); ( Wall, 8, 6, 0.0, 1.0 ); ( Wall, 9, 6, 0.0, 1.0 ); ( Wall, 10, 6, 0.0, 1.0 ); ( Wall, 11, 6, 0.0, 1.0 ); ( Wall, 12, 6, 0.0, 1.0 ); ( Wall, 13, 6, 0.0, 1.0 ); ( Wall, 14, 6, 0.0, 1.0 ); ( Wall, 15, 6, 0.0, 1.0 ); ( Wall, 16, 6, 0.0, 1.0 ); ( Wall, 17, 6, 0.0, 1.0 ); ( Wall, 18, 6, 0.0, 1.0 ); ( Wall, 19, 6, 0.0, 1.0 ); ( Wall, 20, 6, 0.0, 1.0 ); ( Wall, 0, 7, 0.0, 1.0 ); ( Wall, 1, 7, 0.0, 1.0 ); ( Wall, 2, 7, 0.0, 1.0 ); ( Wall, 3, 7, 0.0, 1.0 ); ( Wall, 4, 7, 0.0, 1.0 ); ( Wall, 5, 7, 0.0, 1.0 ); ( Wall, 6, 7, 0.0, 1.0 ); ( Wall, 7, 7, 0.0, 1.0 ); ( Wall, 8, 7, 0.0, 1.0 ); ( Wall, 9, 7, 0.0, 1.0 ); ( Wall, 10, 7, 0.0, 1.0 ); ( Wall, 11, 7, 0.0, 1.0 ); ( Wall, 12, 7, 0.0, 1.0 ); ( Wall, 13, 7, 0.0, 1.0 ); ( Wall, 14, 7, 0.0, 1.0 ); ( Wall, 15, 7, 0.0, 1.0 ); ( Wall, 16, 7, 0.0, 1.0 ); ( Wall, 17, 7, 0.0, 1.0 ); ( Wall, 18, 7, 0.0, 1.0 ); ( Wall, 19, 7, 0.0, 1.0 ); ( Wall, 20, 7, 0.0, 1.0 ); ( Wall, 0, 8, 0.0, 1.0 ); ( Wall, 1, 8, 0.0, 1.0 ); ( Wall, 2, 8, 0.0, 1.0 ); ( Wall, 3, 8, 0.0, 1.0 ); ( Wall, 4, 8, 0.0, 1.0 ); ( Wall, 5, 8, 0.0, 1.0 ); ( Wall, 6, 8, 0.0, 1.0 ); ( Wall, 7, 8, 0.0, 1.0 ); ( Wall, 8, 8, 0.0, 1.0 ); ( Wall, 9, 8, 0.0, 1.0 ); ( Wall, 10, 8, 0.0, 1.0 ); ( Wall, 11, 8, 0.0, 1.0 ); ( Wall, 12, 8, 0.0, 1.0 ); ( Wall, 13, 8, 0.0, 1.0 ); ( Wall, 14, 8, 0.0, 1.0 ); ( Wall, 15, 8, 0.0, 1.0 ); ( Wall, 16, 8, 0.0, 1.0 ); ( Wall, 17, 8, 0.0, 1.0 ); ( Wall, 18, 8, 0.0, 1.0 ); ( Wall, 19, 8, 0.0, 1.0 ); ( Wall, 20, 8, 0.0, 1.0 ); ( Wall, 0, 9, 0.0, 1.0 ); ( Wall, 1, 9, 0.0, 1.0 ); ( Wall, 2, 9, 0.0, 1.0 ); ( Wall, 3, 9, 0.0, 1.0 ); ( Wall, 4, 9, 0.0, 1.0 ); ( Wall, 5, 9, 0.0, 1.0 ); ( Wall, 6, 9, 0.0, 1.0 ); ( Wall, 7, 9, 0.0, 1.0 ); ( Wall, 8, 9, 0.0, 1.0 ); ( Wall, 9, 9, 0.0, 1.0 ); ( Wall, 10, 9, 0.0, 1.0 ); ( Wall, 11, 9, 0.0, 1.0 ); ( Wall, 12, 9, 0.0, 1.0 ); ( Wall, 13, 9, 0.0, 1.0 ); ( Wall, 14, 9, 0.0, 1.0 ); ( Wall, 15, 9, 0.0, 1.0 ); ( Wall, 16, 9, 0.0, 1.0 ); ( Wall, 17, 9, 0.0, 1.0 ); ( Wall, 18, 9, 0.0, 1.0 ); ( Wall, 19, 9, 0.0, 1.0 ); ( Wall, 20, 9, 0.0, 1.0 ); ( Wall, 0, 10, 0.0, 1.0 ); ( Wall, 1, 10, 0.0, 1.0 ); ( Wall, 2, 10, 0.0, 1.0 ); ( Wall, 3, 10, 0.0, 1.0 ); ( Wall, 4, 10, 0.0, 1.0 ); ( Wall, 5, 10, 0.0, 1.0 ); ( Wall, 6, 10, 0.0, 1.0 ); ( Wall, 7, 10, 0.0, 1.0 ); ( Wall, 8, 10, 0.0, 1.0 ); ( Wall, 9, 10, 0.0, 1.0 ); ( Wall, 10, 10, 0.0, 1.0 ); ( Wall, 11, 10, 0.0, 1.0 ); ( Wall, 12, 10, 0.0, 1.0 ); ( Wall, 13, 10, 0.0, 1.0 ); ( Wall, 14, 10, 0.0, 1.0 ); ( Wall, 15, 10, 0.0, 1.0 ); ( Wall, 16, 10, 0.0, 1.0 ); ( Wall, 17, 10, 0.0, 1.0 ); ( Wall, 18, 10, 0.0, 1.0 ); ( Wall, 19, 10, 0.0, 1.0 ); ( Wall, 20, 10, 0.0, 1.0 )
DV_VALUE = 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.00388105035862572, 0.0268381453342325, 0.0338788410228651, 0.0235913022985145, 0.0101981721006798, -0.000171516828564595, -0.00788855071863138, -0.01339729567025, -0.014596841897884, -0.00907770408151712, 0.00176922203049454, 0.0116464416221634, 0.0136321235243698, 0.00616605786568064, -0.00510978090033167, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.00679183812759459, 0.0469667543349069, 0.059287971790014, 0.0412847790224003, 0.0178468011761896, -0.000300154449988078, -0.0138049637576049, -0.0234452674229376, -0.0255444733212971, -0.0158859821426549, 0.00309613855336538, 0.0203812728387858, 0.0238562161676472, 0.0107906012649411, -0.00894211657558026, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0081502057531132, 0.0563601052018886, 0.0711455661480167, 0.0495417348268803, 0.0214161614114274, -0.00036018533998574, -0.016565956509126, -0.0281343209075252, -0.0306533679855566, -0.0190631785711861, 0.00371536626403834, 0.0244575274065431, 0.0286274594011765, 0.0129487215179294, -0.0107305398906961, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.00679183812759437, 0.0469667543349071, 0.0592879717900138, 0.0412847790224002, 0.0178468011761895, -0.000300154449988124, -0.013804963757605, -0.0234452674229377, -0.0255444733212974, -0.0158859821426552, 0.0030961385533651, 0.0203812728387856, 0.0238562161676471, 0.0107906012649412, -0.00894211657557997, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.00388105035862522, 0.0268381453342327, 0.033878841022865, 0.0235913022985144, 0.0101981721006797, -0.000171516828564665, -0.00788855071863147, -0.0133972956702502, -0.0145968418978843, -0.00907770408151748, 0.00176922203049418, 0.0116464416221631, 0.0136321235243697, 0.00616605786568075, -0.00510978090033134, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.00145539388448435, 0.0100643045003373, 0.0127045653835744, 0.0088467383619429, 0.00382431453775489, -6.43188107117528e-05, -0.0029582065194868, -0.00502398587634384, -0.00547381571170662, -0.00340413903056908, 0.000663458261435296, 0.00436741560831115, 0.00511204632163863, 0.00231227169963028, -0.00191616783762422, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.000323420863218745, 0.00223651211118607, 0.00282323675190542, 0.00196594185820953, 0.00084984767505664, -1.42930690470579e-05, -0.000657379226552624, -0.00111644130585419, -0.00121640349149037, -0.000756475340126465, 0.000147435169207843, 0.000970536801846913, 0.00113601029369747, 0.000513838155473396, -0.000425815075027599, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -3.23420863218742e-05, 0.000223651211118606, 0.000282323675190542, 0.000196594185820953, 8.49847675056638e-05, -1.42930690470583e-06, -6.57379226552627e-05, -0.000111644130585419, -0.000121640349149037, -7.56475340126471e-05, 1.4743516920782e-05, 9.70536801846902e-05, 0.000113601029369747, 5.138381554734e-05, -4.25815075027591e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.016058621703346, -0.106795182495873, -0.134840668070775, -0.0935600194430841, -0.0398018539674388, 0.00192069689995578, 0.0330703406704564, 0.0553996430218599, 0.060485881281971, 0.0386815841667079, -0.00445091454575197, -0.0437183503569193, -0.0514271949450132, -0.0213128536077242, 0.0242181946988077, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0281025879808543, -0.186891569367777, -0.235971169123856, -0.163730034025397, -0.0696532444430179, 0.00336121957492272, 0.057873096173299, 0.0969493752882552, 0.105850292243449, 0.0676927722917402, -0.00778910045506498, -0.0765071131246082, -0.0899975911537724, -0.0372974938135177, 0.042381840722913, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0337231055770228, -0.224269883241332, -0.283165402948627, -0.196476040830476, -0.0835838933316213, 0.00403346348990732, 0.0694477154079589, 0.116339250345907, 0.127020350692138, 0.0812313267500882, -0.00934692054607722, -0.0918085357495293, -0.107997109384527, -0.044756992576221, 0.0508582088674948, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.028102587980853, -0.186891569367777, -0.235971169123856, -0.163730034025397, -0.0696532444430177, 0.0033612195749229, 0.0578730961732993, 0.0969493752882558, 0.10585029224345, 0.0676927722917413, -0.00778910045506387, -0.0765071131246073, -0.0899975911537719, -0.037297493813518, 0.0423818407229118, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.016058621703344, -0.106795182495873, -0.134840668070775, -0.0935600194430837, -0.0398018539674386, 0.00192069689995601, 0.0330703406704568, 0.0553996430218605, 0.060485881281972, 0.0386815841667093, -0.00445091454575053, -0.0437183503569183, -0.0514271949450127, -0.0213128536077247, 0.0242181946988063, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00602198313875371, -0.0400481934359524, -0.0505652505265404, -0.0350850072911564, -0.0149256952377895, 0.000720261337483513, 0.0124013777514213, 0.0207748661331978, 0.0226822054807393, 0.014505594062516, -0.00166909295465628, -0.0163943813838443, -0.0192851981043796, -0.0079923201028968, 0.00908182301205226, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00133821847527859, -0.00889959854132278, -0.0112367223392312, -0.00779666828692363, -0.00331682116395321, 0.000160058074996345, 0.00275586172253808, 0.00461663691848842, 0.005040490106831, 0.00322346534722584, -0.000370909545479137, -0.00364319586307653, -0.004285599578751, -0.00177607113397707, 0.00201818289156715, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.000133821847527857, -0.000889959854132282, -0.00112367223392312, -0.000779666828692363, -0.00033168211639532, 1.6005807499635e-05, 0.000275586172253809, 0.000461663691848843, 0.000504049010683102, 0.000322346534722586, -3.70909545479104e-05, -0.000364319586307643, -0.000428559957875098, -0.000177607113397707, 0.000201818289156711, 0.0, 0.0, 0.0

